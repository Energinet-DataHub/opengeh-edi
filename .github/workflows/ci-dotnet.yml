# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI dotnet

on:
  workflow_call:
    inputs:
      job_context:
        description: The context of the job
        type: string
        required: false

jobs:
  print_context:
    name: Print job context
    runs-on: ubuntu-latest
    steps:
      - name: Print context
        run: |
          echo "Job context: ${{ inputs.job_context }}"

  build_artifact:
    name: Artifact - ${{ matrix.artifact.name }}
    runs-on: ubuntu-latest
    env:
      RELEASE_FOLDER_PATH: ${{ github.workspace }}/output
      #RELEASE_ZIP_FILENAME: dotnet_${{ github.event.pull_request.number }}.zip
      RELEASE_VERSION: dotnet_${{ github.event.pull_request.number }}
    strategy:
      fail-fast: false
      matrix:
        artifact:
          - name: B2B API
            should_build: ${{ fromJson(inputs.job_context).b2bapi == 'true' }}
            project_name: b2bapi
            path: source/B2BApi/B2BApi.csproj
            outputpath: functions/b2bapi
          - name: B2C WebAPI
            should_build: ${{ fromJson(inputs.job_context).b2capi == 'true' }}
            project_name: b2capi
            path: source/B2CWebApi/B2CWebApi.csproj
            outputpath: functions/b2capi
    steps:
      - name: Checkout repository
        if: ${{ matrix.artifact.should_build == 'true' }} 
        uses: actions/checkout@v4

      - name: Build ${{ matrix.artifact.name }}
        if: ${{ matrix.artifact.should_build == 'true' }}
        run: |
          dotnet publish \
            '${{ matrix.artifact.path }}' \
            --configuration Release \
            --output '${{ env.RELEASE_FOLDER_PATH }}/${{ matrix.artifact.outputpath }}'

      - name: Zip files for prerelease
        if: ${{ github.event_name == 'pull_request' && matrix.artifact.should_build == 'true' }}
        uses: thedoctor0/zip-release@0.6.2
        with:
          type: zip
          filename: dotnet_${{ github.event.pull_request.number }}_${{matrix.artifact.project_name}}.zip
          directory: ${{ env.RELEASE_FOLDER_PATH }}

      - name: Create pre-release
        if: ${{ github.event_name == 'pull_request' && matrix.artifact.should_build == 'true' }}
        uses: Energinet-Datahub/.github/.github/actions/github-create-release@v14
        with:
          repo_token: ${{ github.token }}
          automatic_release_tag: ${{ env.RELEASE_VERSION }}_${{ matrix.artifact.project_name}}
          prerelease: true
          title: ${{ env.RELEASE_VERSION }}_${{ matrix.artifact.project_name}}
          files: |
            ${{ env.RELEASE_FOLDER_PATH }}/dotnet_${{ github.event.pull_request.number }}_${{matrix.artifact.project_name}}.zip
  build_testsuite:
    name: Build ${{ matrix.testproject.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        testproject:
        - name: IntegrationTests
          path: .\source\IntegrationTests\IntegrationTests.csproj
          outputpath: .\source\Tests\bin\Release\net8.0
        - name: ArchitectureTests
          path: .\source\ArchitectureTests\ArchitectureTests.csproj
          outputpath: .\source\Tests\bin\Release\net8.0
        - name: Tests
          path: .\source\Tests\Tests.csproj
          outputpath: .\source\Tests\bin\Release\net8.0
        - name: B2BApi AppTests
          path: .\source\B2BApi.AppTests\B2BApi.AppTests.csproj
          outputpath: .\source\Tests\bin\Release\net8.0
        - name: B2CWebApi AppTests
          path: .\source\B2CWebApi.AppTests\B2CWebApi.AppTests.csproj
          outputpath: .\source\Tests\bin\Release\net8.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ${{ matrix.testproject.name }}
        run: |
          dotnet publish \
            '${{ matrix.testproject.path }}' \
            --configuration Release \
            --output '${{ matrix.testproject.outputpath }}'
      
      - uses: actions/upload-artifact@v4
        with:
          name: edi-tests-${{ matrix.testproject.name }}
          path: ./source/Tests/bin/Release/net8.0/*.dll

      # - name: Copy all bin folders
      #   shell: bash
      #   run: |
      #     # Create base directory
      #     mkdir -p '${{ inputs.output_path }}/source' ';'
      #     # Copy everything from source to the new directory
      #     cp -a source/. '${{ inputs.output_path }}/source'
      #     # Remove obj-directories from artifact
      #     find ${{ inputs.output_path }}/ -type d -name 'obj' -exec rm -rf {} +


  # Tests that require the integration test environment
  # DO NOT add ProcessManager.Client tests, they must be executed as part of the "publish" workflow"
  testsuite:
    strategy:
      fail-fast: false
      matrix:
        tests_filter_expression:
          - name: Architecture Tests
            paths: \source\ArchitectureTests\bin\Release\net8.0\Energinet.DataHub.EDI.ArchitectureTests.dll
            
          - name: Tests
            paths: \source\Tests\bin\Release\net8.0\Energinet.DataHub.EDI.Tests.dll

          - name: ProcessManager Tests
            paths: \source\ProcessManager.Tests\bin\Release\net8.0\Energinet.DataHub.ProcessManager.Tests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: ProcessManager Orchestrations Tests
            paths: \source\ProcessManager.Orchestrations.Tests\bin\Release\net8.0\Energinet.DataHub.ProcessManager.Orchestrations.Tests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: ProcessManager Core Tests
            paths: \source\ProcessManager.Core.Tests\bin\Release\net8.0\Energinet.DataHub.ProcessManager.Core.Tests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: ProcessManager Subsystem Tests
            paths: \source\ProcessManager.SubsystemTests\bin\Release\net8.0\Energinet.DataHub.ProcessManager.SubsystemTests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: B2BApi AppTests
            paths: \source\Tests\bin\Release\net8.0\Energinet.DataHub.EDI.B2BApi.AppTests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: B2CWebApi AppTests
            paths: \source\Tests\bin\Release\net8.0\Energinet.DataHub.EDI.B2CWebApi.AppTests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: Integration tests - Behaviours - IncomingRequests
            paths: \source\IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.IntegrationTests.dll
            filter: (DisplayName~IntegrationTests.Behaviours)&(DisplayName~Behaviours.IncomingRequests)
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: Integration tests - Behaviours - IntegrationEvents - BalanceFixing
            paths: \source\IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.IntegrationTests.dll
            filter: (DisplayName~IntegrationTests.Behaviours)&(DisplayName~Behaviours.IntegrationEvents)&(DisplayName~BalanceFixing)
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: Integration tests - Behaviours - IntegrationEvents - Other
            paths: \source\IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.IntegrationTests.dll
            filter: (DisplayName~IntegrationTests.Behaviours)&(DisplayName~Behaviours.IntegrationEvents)&(DisplayName!~BalanceFixing)
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: Integration tests - Behaviours - Other
            paths: \source\IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.IntegrationTests.dll
            filter: (DisplayName~IntegrationTests.Behaviours)&(DisplayName!~Behaviours.IncomingRequests)&(DisplayName!~Behaviours.IntegrationEvents)
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: Integration tests - CalculationResults
            paths: \source\IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.IntegrationTests.dll
            filter: (DisplayName~IntegrationTests.CalculationResults)
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: Integration tests - Other
            paths: \source\IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.IntegrationTests.dll
            filter: (DisplayName!~IntegrationTests.Behaviours)&(DisplayName!~IntegrationTests.CalculationResults)
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: ArchivedMessages - integration tests
            paths: \source\ArchivedMessages.IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.ArchivedMessages.IntegrationTests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: IntegrationEvents - integration tests
            paths: \source\IntegrationEvents.IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.IntegrationEvents.IntegrationTests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: MasterData - integration tests
            paths: \source\MasterData.IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.MasterData.IntegrationTests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: IncomingMessages - integration tests
            paths: \source\IncomingMessages.IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.IncomingMessages.IntegrationTests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: OutgoingMessages - integration tests
            paths: \source\OutgoingMessages.IntegrationTests\bin\Release\net8.0\Energinet.DataHub.EDI.OutgoingMessages.IntegrationTests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

          - name: Edi - integration/unit tests
            paths: \source\Edi.UnitTests\bin\Release\net8.0\Energinet.DataHub.Wholesale.Edi.UnitTests.dll
            filter: empty # Means skip
            use_azure_functions_tools: true
            contentroot_variable_name: empty # Means skip

    uses: Energinet-DataHub/.github/.github/workflows/dotnet-postbuild-test.yml@v14
    with:
      download_attempt_limit: 20
      azure_integrationtest_tenant_id: ${{ vars.integration_test_azure_tenant_id }}
      azure_integrationtest_subscription_id: ${{ vars.integration_test_azure_subscription_id }}
      azure_integrationtest_spn_id: ${{ vars.integration_test_azure_spn_id_oidc }}
      azure_keyvault_url: ${{ vars.integration_test_azure_keyvault_url }}
      environment: AzureAuth
      run_integration_tests: true
      # Matrix parameters
      job_name: ${{ matrix.tests_filter_expression.name }}
      tests_dll_file_path: ${{ matrix.tests_filter_expression.paths }}
      tests_filter_expression: ${{ matrix.tests_filter_expression.filter }}
      use_azure_functions_tools: ${{ matrix.tests_filter_expression.use_azure_functions_tools }}
      aspnetcore_test_contentroot_variable_name: ${{ matrix.tests_filter_expression.contentroot_variable_name }}
      aspnetcore_test_contentroot_variable_value: ${{ matrix.tests_filter_expression.contentroot_variable_value }}
