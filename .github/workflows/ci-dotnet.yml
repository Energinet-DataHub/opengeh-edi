# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI dotnet

on:
  workflow_call: {}

jobs:
  # Build all projects within solution
  dotnet_ci_build:
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-build-prerelease.yml@v10
    with:
      SOLUTION_FILE_PATH: "source/EDI.sln"
      DOTNET_VERSION: 7.0.200

  # Run all tests in 'IntegrationTests.dll'
  integration_tests:
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-postbuild-test.yml@v10
    with:
      TESTS_DLL_FILE_PATH: '\source\IntegrationTests\bin\Release\net7.0\IntegrationTests.dll'
      DOWNLOAD_ATTEMPT_LIMIT: 12
      DOTNET_VERSION: 7.0.200

  # Run all tests in 'ArchitectureTests.dll'
  architecture_tests:
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-postbuild-test.yml@v10
    with:
      TESTS_DLL_FILE_PATH: '\source\ArchitectureTests\bin\Release\net7.0\ArchitectureTests.dll'
      DOWNLOAD_ATTEMPT_LIMIT: 12
      DOTNET_VERSION: 7.0.200

  # Run all tests in 'Tests.dll'
  tests:
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-postbuild-test.yml@v10
    with:
      TESTS_DLL_FILE_PATH: '\source\Tests\bin\Release\net7.0\Tests.dll'
      DOWNLOAD_ATTEMPT_LIMIT: 12
      DOTNET_VERSION: 7.0.200

  # Configure environment details
  configure_environment_details:
    runs-on: ubuntu-22.04
    environment: AzureAuth
    permissions:
      id-token: write
      contents: read
    outputs:
      resourceGroup: ${{ steps.getResourceGroup.outputs.resourceGroup }}
      namespaceName: ${{ steps.getServiceBusNamespace.outputs.namespaceName }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_SPN_ID_OIDC }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - id: getResourceGroup
        shell: pwsh
        run: |
          "resourceGroup=$(`
          az keyvault secret show `
            --vault-name ${{ secrets.AZURE_KEYVAULT_NAME }} `
            --name "AZURE-SHARED-RESOURCEGROUP" `
            --query value -o tsv)"
          Write-Output "::add-mask::$resourceGroup"
          Write-Output resourceGroup=$resourceGroup >> $Env:GITHUB_OUTPUT  
      - id: getServiceBusNamespace
        shell: pwsh
        run: Write-Output "::add-mask::namespaceName=$(`
          az keyvault secret show `
            --vault-name ${{ secrets.AZURE_KEYVAULT_NAME }} `
            --name "AZURE-SERVICEBUS-NAMESPACE" `
            --query value -o tsv)" >> $Env:GITHUB_OUTPUT
  
  # Deploy resources for acceptance testing
  deploy_acceptance_test_resources:
    needs: configure_environment_details
    runs-on: ubuntu-22.04
    environment: AzureAuth
    permissions:
      id-token: write
      contents: read
    env: 
      PrNumber: ${{ github.event.pull_request.number }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_SPN_ID_OIDC }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy base resources
        shell: pwsh
        run: |
          .\source\Deployment\deploy.ps1 `
            -PrNumber $Env:PrNumber `
            -Subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} `
            -ResourceGroup ${{ needs.configure_environment_details.outputs.resourceGroup }} `
            -SqlServerName " " `
            -NamespaceName ${{ needs.configure_environment_details.outputs.namespaceName }}
      - name: Publish acceptance test resources
        shell: pwsh
        run: Write-Host Publishing acceptance test resources. For PR ${{ github.event.pull_request.number }}
