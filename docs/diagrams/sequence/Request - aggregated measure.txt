autoactivation on
participantgroup #lightyellow **Api**
participant HTTP Trigger
participant RequestAggregatedMeasureDataReceiver
end
participantgroup #lightgreen **Infrastructure**
participant CimFormatParser
participant MessageIdRegistry
participant TransactionIdRegistry
participant XmlMessageParser
participant MessageQueueDispatcher
participant ServiceBusSenderAdapter
participant ServiceBusSenderFactory
end
participantgroup #lightgreen **CimMessageAdapter**
participant MessageParser
participant RequestAggregatedMeasureDataReceiver
participant SenderAuthorize
participant MessageReceiver
participant ReceiverVerification
end
participantgroup #lightgreen **DocumentValidation**
participant CimXmlSchemaProvider
end
HTTP Trigger->RequestAggregatedMeasureDataReceiver: Request
RequestAggregatedMeasureDataReceiver->CimFormatParser:Parse
RequestAggregatedMeasureDataReceiver<--CimFormatParser:DocumentFormat
RequestAggregatedMeasureDataReceiver->MessageParser:Parse
MessageParser->XmlMessageParser:Parse
XmlMessageParser->CimXmlSchemaProvider:GetSchema
XmlMessageParser<--CimXmlSchemaProvider:Schema
MessageParser<--XmlMessageParser:MessageParserResult
RequestAggregatedMeasureDataReceiver<--MessageParser: MessageParseResult
RequestAggregatedMeasureDataReceiver->MessageReceiver:Receive
MessageReceiver->SenderAuthorize:Authorize
MessageReceiver<--SenderAuthorize:Result
MessageReceiver->ReceiverVerification:Verifiy
MessageReceiver<--ReceiverVerification:Result
MessageReceiver->MessageIdRegistry:TryStore
MessageReceiver<--MessageIdRegistry:bool
MessageReceiver->TransactionIdRegistry:TryStore
MessageReceiver<--TransactionIdRegistry:bool
MessageReceiver->MessageQueueDispatcher:Add
MessageReceiver->MessageQueueDispatcher:Commit (publish)
MessageQueueDispatcher->ServiceBusSenderFactory:GetSender
MessageQueueDispatcher<--ServiceBusSenderFactory:Sender (Adapter)
MessageQueueDispatcher->ServiceBusSenderAdapter:Send
RequestAggregatedMeasureDataReceiver<--MessageReceiver:Result
HTTP Trigger<--RequestAggregatedMeasureDataReceiver: Response