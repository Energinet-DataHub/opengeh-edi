autoactivation on
participantgroup #lightyellow **Api**
participant Timer Trigger (TenSecondsHasPassed)

end
participantgroup #lightblue **Application**
participant WhenAnAggregationResultIsAvailable
participant CommandSchedulerFacade
end
participantgroup #lightgreen **Infrastructure**
participant ProcessIntegrationEventsOnTenSecondsHasPassed
participant IntegrationEventsProcessor
participant DB Connection
participant CalculationResultCompletedEventMapper
participant CommandScheduler
participant B2BContext
participant UnitOfWork
participant IntegrationEventsProcessor
end
Timer Trigger (TenSecondsHasPassed)->Mediator:Publish (event: TenSecondsHasHasPassed)
Mediator->ProcessIntegrationEventsOnTenSecondsHasPassed:Handle
ProcessIntegrationEventsOnTenSecondsHasPassed->IntegrationEventsProcessor: ProcessMessages
IntegrationEventsProcessor->DB Connection: Find pending Messages
IntegrationEventsProcessor<--DB Connection: ReceivedIntegrationEvents
IntegrationEventsProcessor->CalculationResultCompletedEventMapper:CanHandle
IntegrationEventsProcessor<--CalculationResultCompletedEventMapper: bool
IntegrationEventsProcessor->CalculationResultCompletedEventMapper: MapFrom
IntegrationEventsProcessor<--CalculationResultCompletedEventMapper: AggreationResultAvailable (Notification)
IntegrationEventsProcessor->Mediator:Publish (events)
Mediator->WhenAnAggregationResultIsAvailable:Handle
WhenAnAggregationResultIsAvailable->CommandSchedulerFacade: Enqueue (ForwardAggregationResult)
CommandSchedulerFacade->CommandScheduler:Enqueue (InternalCommand)
CommandScheduler->B2BContext:Add (tabel: QueuedInternalCommands) 
CommandSchedulerFacade->UnitOfWork:Commit
UnitOfWork->B2BContext:SaveChanges
IntegrationEventsProcessor->DB Connection: MarkedAsProcessed


