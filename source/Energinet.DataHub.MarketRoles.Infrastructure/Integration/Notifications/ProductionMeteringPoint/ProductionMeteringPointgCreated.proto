/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "google/protobuf/timestamp.proto";

option csharp_namespace = "NotificationContracts";

/**
 * This message is sent out when a Consumption metering point is created.
 */
message ProductionMeteringPointCreated {
  enum NetSettlementGroup {
    NSG_ZERO = 0;
    NSG_ONE = 1;
    NSG_TWO = 2;
    NSG_THREE = 3;
    NSG_SIX = 4;
    NSG_NINETYNINE = 5;
  }

  enum ProductType {
    PT_TARIFF = 0;
    PT_FUELQUANTITY = 1;
    PT_POWERACTIVE = 2;
    PT_POWERREACTIVE = 3;
    PT_ENERGYACTIVE = 4;
    PT_ENERGYREACTIVE = 5;
  }

  enum MeteringMethod {
    MM_PHYSICAL = 0; // Has a physical meter associated with it
    MM_VIRTUAL = 1; // Does not have a physical meter associated with it
    MM_CALCULATED =2; // Does not have a physical meter associated with it
  }

  enum MeterReadingPeriodicity {
    MRP_HOURLY = 0; // Read every hour
    MRP_QUARTERLY = 1; // Read every 15 minutes
  }
  
  enum ConnectionState {
    CS_NEW = 0; // Always created with connection state new
  }
  
  enum UnitType {
      UT_WH = 0; // Watt per hour
      UT_KWH = 1; // Kilowatt per hour
      UT_MWH = 2; // Megawatt per hour
      UT_GWH = 3; // Gigawatt per hour
  }

  string metering_point_id = 1; // Unique identification for metering point
  string gsrn_number = 2; // Business facing metering point identifier
  string grid_area_code = 3; // Signifies which grid area a metering point belongs to
  MeteringMethod metering_method = 4; // Metering method denotes where energy quantities originate
  MeterReadingPeriodicity meter_reading_periodicity = 5; // Denotes how often a energy quantity is read on a metering point
  NetSettlementGroup net_settlement_group = 6; // Denotes the net settlement group
  ProductType product = 7; // Denotes the product type
  ConnectionState connection_state = 8; // Denotes which connection state a metering point is created with. For a production metering point this is always "New"
  UnitType unit_type = 9; // Denotes the unit type. For a production metering point this is always a variation of watt/hour 
  google.protobuf.Timestamp effective_Date = 10; // The date on which the metering point is created
}