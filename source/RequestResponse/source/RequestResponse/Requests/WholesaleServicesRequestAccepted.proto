/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Energinet.DataHub.Wholesale.Contracts.IntegrationEvents";

message WholesaleServicesRequestAccepted {
  repeated Series series = 1;
}

/*
 * A calculation will result in one or more wholesale results. Each result is
 * published as an instance of this type.
 */
message Series {
  /*
   * The beginning of the calculation period.
   * The time is included in the period and is identical to the time of the first time series point
   * in the process time series type results.
   */
  google.protobuf.Timestamp period_start_utc = 1;

  /*
   * The end of the calculation period.
   * The time is excluded from the period.
   */
  google.protobuf.Timestamp period_end_utc = 2;

  string grid_area_code = 3;

  string energy_supplier_id = 4;

  string charge_code = 5;

  ChargeType charge_type = 6;

  string charge_owner_id = 7;

  Resolution resolution = 8;

  QuantityUnit quantity_unit = 9;

  MeteringPointType metering_point_type = 10;

  /*
   * Settlement method is only set when metering point type is 'METERING_POINT_TYPE_CONSUMPTION'.
   */
  optional SettlementMethod settlement_method = 11;

  Currency currency = 12;

  repeated TimeSeriesPoint time_series_points = 13;

  /*
   * The version of the calculation result. It is a positive integer (int64).
  */
  int64 calculation_result_version = 14;

   // ---------------------------- NESTED TYPES BELOW ----------------------------------------

  enum ChargeType {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    CHARGE_TYPE_UNSPECIFIED = 0;
    CHARGE_TYPE_FEE = 1;
    CHARGE_TYPE_TARIFF = 2;
    CHARGE_TYPE_SUBSCRIPTION = 3;
  }

  enum MeteringPointType {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     *
     * Possible values for metering point type are any but the exchange metering point type.
     */
    METERING_POINT_TYPE_UNSPECIFIED = 0;
    METERING_POINT_TYPE_PRODUCTION = 1;
    METERING_POINT_TYPE_CONSUMPTION = 2;
    METERING_POINT_TYPE_VE_PRODUCTION = 3;
    METERING_POINT_TYPE_NET_PRODUCTION = 4;
    METERING_POINT_TYPE_SUPPLY_TO_GRID = 5;
    METERING_POINT_TYPE_CONSUMPTION_FROM_GRID = 6;
    METERING_POINT_TYPE_WHOLESALE_SERVICES_INFORMATION = 7;
    METERING_POINT_TYPE_OWN_PRODUCTION = 8;
    METERING_POINT_TYPE_NET_FROM_GRID = 9;
    METERING_POINT_TYPE_NET_TO_GRID = 10;
    METERING_POINT_TYPE_TOTAL_CONSUMPTION = 11;
    METERING_POINT_TYPE_ELECTRICAL_HEATING = 12;
    METERING_POINT_TYPE_NET_CONSUMPTION = 13;
    METERING_POINT_TYPE_EFFECT_SETTLEMENT = 14;
  }

  enum QuantityUnit {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    QUANTITY_UNIT_UNSPECIFIED = 0;

    // States that the energy quantity is measured in kWh (kilo Watt hours).
    QUANTITY_UNIT_KWH = 1;
    QUANTITY_UNIT_PIECES = 2;
  }

  /*
   * The quality of the energy quantity.
   */
  enum QuantityQuality {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    QUANTITY_QUALITY_UNSPECIFIED = 0;
    QUANTITY_QUALITY_ESTIMATED = 1;
    QUANTITY_QUALITY_MEASURED = 2;
    QUANTITY_QUALITY_MISSING = 3;
    QUANTITY_QUALITY_CALCULATED = 4;
  }

  /*
   *  States the duration that each time series point represents
   */
  enum Resolution {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    RESOLUTION_UNSPECIFIED = 0;
    RESOLUTION_DAY = 4;
    RESOLUTION_HOUR = 6;
  }

  enum SettlementMethod {
    /*
     * Unspecified is unused but according to best practice.
     * Read more at https://protobuf.dev/programming-guides/style/#enums.
     */
    SETTLEMENT_METHOD_UNSPECIFIED = 0;
    SETTLEMENT_METHOD_FLEX = 1;
    SETTLEMENT_METHOD_NON_PROFILED = 2;
  }

  enum Currency {
    CURRENCY_UNSPECIFIED = 0;
    CURRENCY_DKK = 1;
  }

  message TimeSeriesPoint {

    google.protobuf.Timestamp time = 1;

    /*
     * 3 digit scale decimal value. The value represents either energy quantity or pieces (dependency on QuantityUnit).
     */
    DecimalValue quantity = 2;

    repeated QuantityQuality quantity_qualities = 3;

    /*
     * 6 digit scale decimal value of the price.
     * The value can be null if no price data is present for the given time series point.
     */
    optional DecimalValue price = 4;

    /*
     * 6 digit scale decimal value of the amount.
     * The value can be null if price is null
     */
    optional DecimalValue amount = 5;
  }
}

/*
 * Representation of a decimal value.
 * See more at https://learn.microsoft.com/en-us/dotnet/architecture/grpc-for-wcf-developers/protobuf-data-types#decimals.
 * Example: 12345.6789 -> { units = 12345, nanos = 678900000 }
 */
message DecimalValue {

  // Whole units part of the amount
  int64 units = 1;

  // Nano units of the amount (10^-9)
  // Must be same sign as units
  sfixed32 nanos = 2;
}