/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
import "google/protobuf/timestamp.proto";
import "IntegrationEvents/MarketParticipant/EicFunction.proto";

option csharp_namespace = "Energinet.DataHub.MarketParticipant.Infrastructure.Model.Contracts";

/*
* ProcessDelegationConfigured Integration Event.
*
* Occurs when an actor (delegated_by) configures delegation a certain process to another actor (delegated_to).
* Delegations cannot be deleted, but their validity period (stops_at) can be either shortened or extended.
* Delegations cannot overlap, *EXCEPT* if a delegation ends before it begins.
*/
message ProcessDelegationConfigured {

  /*
   * The EIC or GLN identifier of the actor that delegated its process to another actor.
   */
  string delegated_by_actor_number = 1;

  /*
   * The market role of the actor that delegated its process to another actor.
   */
  EicFunction delegated_by_actor_role = 2;

  /*
   * The EIC or GLN identifier of the actor that handles the delegated process.
   */
  string delegated_to_actor_number = 3;

  /*
   * The market role of the actor that handles the delegated process.
   * This is currently always EIC_FUNCTION_DELEGATED.
   */
  EicFunction delegated_to_actor_role = 4;

  /*
   * The process to delegate messages for.
   */
  DelegatedProcess process = 5;

  /*
   * The code of the grid area for which the process is delegated.
   */
  string grid_area_code = 6;

  /*
   * The start timestamp of the configured delegation (inclusive).
   */
  google.protobuf.Timestamp starts_at = 7;

  /*
   * The end timestamp of the configured delegation (inclusive).
   * If the delegation does not stop, stops_at is set to December 31, 9999.
   * If stops_at occurs before starts_at, then the delegation is cancelled. 
   */
  google.protobuf.Timestamp stops_at = 8;

  /*
   * The sequence number of the event. The number is always increasing, but may not be continuous.
   * Used to determine the latest delegation configuration.
   */
  int32 sequence_number = 9;
}

enum DelegatedProcess {
  /*
   * Unspecified is unused but according to best practice.
   * Read more at https://protobuf.dev/programming-guides/style/#enums.
   */
  PROCESS_UNSPECIFIED = 0;
  PROCESS_REQUEST_ENERGY_RESULTS = 1;
  PROCESS_RECEIVE_ENERGY_RESULTS = 2;
  PROCESS_REQUEST_WHOLESALE_RESULTS = 3;
  PROCESS_RECEIVE_WHOLESALE_RESULTS = 4;  
  PROCESS_REQUEST_METERINGPOINT_DATA = 5;
  PROCESS_RECEIVE_METERINGPOINT_DATA = 6;
}